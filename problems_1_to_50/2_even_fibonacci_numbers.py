"""Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1,2,3,5,8,13,21,34,55,89
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

import sys
import unittest


def fibonacci_generator(maximum):
    i1 = 0
    i2 = 1
    while( i2 <= maximum):
        yield i2
        i_temp = i1 + i2 
        i1 = i2
        i2 = i_temp

def even_fibonacci_generator(maximum):
    i1 = 0
    i2 = 2
    while( i2 <= maximum):
        yield i2
        i_temp = 4*i2 + i1
        i1 = i2
        i2 = i_temp


def find_sum_of_even_fibonacci(maximum, algorithm='even_generator'):
    if algorithm == 'even_generator':
        return sum(x for x in even_fibonacci_generator(maximum) )
    elif algorithm == 'brute_generator':
        return sum(x for x in fibonacci_generator(maximum) if not x%2)
    else:
        raise Exception('unknown algorithm {}'.format(algorithm))


class TestSumEvenFibonacci(unittest.TestCase):
    def test_brute_force(self):
        self.assertEqual(find_sum_of_even_fibonacci(1,'brute_generator'), 0)
        self.assertEqual(find_sum_of_even_fibonacci(2,'brute_generator'), 2)
        self.assertEqual(find_sum_of_even_fibonacci(3,'brute_generator'), 2)
        self.assertEqual(find_sum_of_even_fibonacci(9,'brute_generator'), 10)
        self.assertEqual(find_sum_of_even_fibonacci(34,'brute_generator'), 44)
        self.assertEqual(find_sum_of_even_fibonacci(35,'brute_generator'), 44)

    def test_even_generator_force(self):
        self.assertEqual(find_sum_of_even_fibonacci(1), 0)
        self.assertEqual(find_sum_of_even_fibonacci(2), 2)
        self.assertEqual(find_sum_of_even_fibonacci(3), 2)
        self.assertEqual(find_sum_of_even_fibonacci(9), 10)
        self.assertEqual(find_sum_of_even_fibonacci(34), 44)
        self.assertEqual(find_sum_of_even_fibonacci(35), 44)




if __name__ == '__main__':
    maximum = int(sys.argv[1])
    print find_sum_of_even_fibonacci(maximum)



